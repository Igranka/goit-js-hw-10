{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\nlet futureIndicator;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDates = selectedDates[0];\n    futureIndicator = selectedDates - new Date();\n    if (futureIndicator < 0) {\n        iziToast.show({\n            color: '#EF4040',\n            progressBarColor: 'rgb(181, 27, 27)',\n            messageColor: '#FFFFFF',\n            message: 'Please choose a date in the future',\n            position: 'topRight',\n        });\n        buttonInput.disabled = true;\n        buttonInput.classList.remove(`is-active`);\n        dateInput.classList.add(`is-disabled`);\n    } else {\n        userSelectedDate = selectedDates;\n        buttonInput.disabled = false;\n        buttonInput.classList.add(`is-active`);\n        dateInput.classList.remove(`is-disabled`);\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst datePicker = flatpickr(\"#datetime-picker\", options);\nconst dateInput = document.querySelector('#datetime-picker');\nconst buttonInput = document.querySelector('button');\nconst timerElements = document.querySelectorAll('.value');\n\nconsole.log(timerElements);\n\nbuttonInput.disabled = true;\n\nbuttonInput.addEventListener('click', event => {\n    function timer() {\n        futureIndicator = userSelectedDate - new Date();\n        if (futureIndicator > 0) {\n            const timer = convertMs(futureIndicator);\n            timerElements[0].innerText = timer.days.toString().padStart(2, '0');\n            timerElements[1].innerText = timer.hours.toString().padStart(2, '0');\n            timerElements[2].innerText = timer.minutes.toString().padStart(2, '0');\n            timerElements[3].innerText = timer.seconds.toString().padStart(2, '0');\n        }\n    }\n    const interval = setInterval(timer, 999);\n});\n\n"],"names":["userSelectedDate","futureIndicator","options","selectedDates","iziToast","buttonInput","dateInput","convertMs","ms","days","hours","minutes","seconds","flatpickr","timerElements","event","timer"],"mappings":"+IAMA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBA,EAAgBA,EAAc,CAAC,EAC/BF,EAAkBE,EAAgB,IAAI,KAClCF,EAAkB,GAClBG,EAAS,KAAK,CACV,MAAO,UACP,iBAAkB,mBAClB,aAAc,UACd,QAAS,qCACT,SAAU,UACtB,CAAS,EACDC,EAAY,SAAW,GACvBA,EAAY,UAAU,OAAO,WAAW,EACxCC,EAAU,UAAU,IAAI,aAAa,IAErCN,EAAmBG,EACnBE,EAAY,SAAW,GACvBA,EAAY,UAAU,IAAI,WAAW,EACrCC,EAAU,UAAU,OAAO,aAAa,EAE7C,CACH,EAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEmBC,EAAU,mBAAoBX,CAAO,EACxD,MAAMI,EAAY,SAAS,cAAc,kBAAkB,EACrDD,EAAc,SAAS,cAAc,QAAQ,EAC7CS,EAAgB,SAAS,iBAAiB,QAAQ,EAExD,QAAQ,IAAIA,CAAa,EAEzBT,EAAY,SAAW,GAEvBA,EAAY,iBAAiB,QAASU,GAAS,CAC3C,SAASC,GAAQ,CAEb,GADAf,EAAkBD,EAAmB,IAAI,KACrCC,EAAkB,EAAG,CACrB,MAAMe,EAAQT,EAAUN,CAAe,EACvCa,EAAc,CAAC,EAAE,UAAYE,EAAM,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAClEF,EAAc,CAAC,EAAE,UAAYE,EAAM,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EACnEF,EAAc,CAAC,EAAE,UAAYE,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EACrEF,EAAc,CAAC,EAAE,UAAYE,EAAM,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CACxE,CACJ,CACgB,YAAYA,EAAO,GAAG,CAC3C,CAAC"}